'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var OrderBook = function () {
    function OrderBook() {
        _classCallCheck(this, OrderBook);

        this.store = {};
        this.onOrderEvent = this.onOrderEvent.bind(this);
        this.top = this.top.bind(this);
    }

    _createClass(OrderBook, [{
        key: 'onOrderEvent',
        value: function onOrderEvent(orderEvent) {
            switch (orderEvent.Type) {
                case 0: // new
                case 2:
                    // update
                    this.store[orderEvent.Rate] = {
                        rate: orderEvent.Rate,
                        quantity: orderEvent.Quantity
                    };
                    break;
                case 1:
                    // delete
                    if (this.store.hasOwnProperty(orderEvent.Rate)) {
                        delete this.store[orderEvent.Rate];
                    }
                    break;
                default:
                    console.log('unknown type given', orderEvent.Type);
                    break;
            }
        }
    }, {
        key: 'top',
        value: function top(limit) {
            console.log('no getTop method defined for this class');
        }
    }]);

    return OrderBook;
}();

module.exports = OrderBook;